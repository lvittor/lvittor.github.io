{"version":3,"sources":["webpack:///./src/components/Project/images/project-currents-01.png","webpack:///./src/components/Project/images/project-data-retention-01.png","webpack:///./src/content/work/2019-11-25-currents/currents-info.mp4","webpack:///./src/components/Project/images/project-prist-01.png","webpack:///./src/components/Project/images/project-albondiga-01.png","webpack:///./src/components/Intro/Intro.jsx","webpack:///./src/components/Bookshelf/BookGenreTag.jsx","webpack:///./src/components/Bookshelf/BookRow.jsx","webpack:///./src/components/_ui/Card/Card.jsx","webpack:///./src/components/Bookshelf/Bookshelf.jsx","webpack:///./src/components/Bookshelf/books.js","webpack:///./src/components/Bookshelf/BookshelfContainer.jsx","webpack:///./src/components/Project/Project.jsx","webpack:///./src/components/Project/projects.js","webpack:///./src/pages/index.js","webpack:///./src/components/Project/images/project-tree-analysis-01.png","webpack:///./src/components/Project/images/project-weather-status-01.png","webpack:///./src/components/Project/images sync ^\\.\\/.*\\.png$","webpack:///./src/components/Project/images/project-candy-crush-01.png","webpack:///./src/components/Project/images/project-dvs-01.png","webpack:///./src/components/Project/images/project-numeros-01.png"],"names":["module","exports","Intro","MaxWidth","size","className","class","href","target","Link","doOpenInNewTab","isButton","buttonProps","color","to","BookGenreTag","state","genreColor","setGenreColor","props","genre","genreObject","genresList","find","i","setState","componentDidMount","this","render","style","backgroundColor","border","borderColor","Label","Component","BookRow","bookIsClicked","bookColor","openBook","trackEvent","title","prevState","action","ReactGA","event","category","audiobook","author","categories","coverImg","goodreadsUrl","inProgress","summary","classNames","onClick","icon","faHeadphones","faSpinner","faClipboardCheck","src","alt","Card","getClassName","padding","children","defaultProps","Bookshelf","books","booksToShow","expanded","genreColors","showMoreBooks","slice","map","key","findColor","finished","isFiction","tags","role","aria-label","Button","BookshelfContainer","genres","graphIsShowingGenres","categoryColors","bookListRows","totalBooks","length","toggleBookListStyle","getGenreCounts","fullGenreList","counts","categoriesDict","genresDict","j","push","sort","forEach","num","catColorIndex","genreColorIndex","Object","keys","index","value","categoriesList","componentWillMount","Project","demo","description","github","hasImageBorder","images","imgType","inspiration","readMore","tech","query","data","clas3sName","link_src","rel","faGithub","image","require","autoPlay","loop","muted","playsInline","poster","videoCurrents","type","projects","candyCrush","projectType","code","tree","weatherStatus","Home","Layout","showNavigation","showSocialCol","showFooter","SEO","id","img_src","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","resolve"],"mappings":"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","file":"component---src-pages-index-js-7da9c08cc998c6f4f0f3.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/project-currents-01-b234159732fc16b22a5d12b7a2f3eb56.png\";","module.exports = __webpack_public_path__ + \"static/project-data-retention-01-d75a487e7d2eed7e68c0bc557c4ce65e.png\";","module.exports = __webpack_public_path__ + \"static/currents-info-6f2012bc3ca951e77318cb96892c7de8.mp4\";","module.exports = __webpack_public_path__ + \"static/project-prist-01-ff03bc42da9f387901aa40e3f48ce78b.png\";","module.exports = __webpack_public_path__ + \"static/project-albondiga-01-7f0623f22122a59da1f7493f217b79e7.png\";","import React from \"react\"\nimport Link from \"components/_ui/Link/Link\";\nimport MaxWidth from \"components/_ui/MaxWidth/MaxWidth\";\n\nimport \"./Intro.scss\";\n\nconst Intro = () => {\n    return (\n        <MaxWidth\n            size=\"m\" //l, para ponerla a la izquierda\n            className=\"Intro\"\n        >\n            <h2 className=\"Intro__greeting\">\n                ¡Hola! <span class=\"wave\">👋</span>\n                {/* <span className=\"emoji\" role=\"img\" aria-label=\"Emoji hotdog\">🌭</span> */}\n            </h2>\n            <h1 className=\"Intro__header\">\n                Lucas Vittor<br/>\n            </h1>\n            <h3 className=\"Intro__subheader\">\n                Ing. Informática en <a href=\"https://www.itba.edu.ar/\" target=\"_blank\">ITBA</a>. <br/>\n                Buenos Aires, Argentina.\n                {/* <span className=\"emoji\" role=\"img\" aria-label=\"Emoji smile\">😊</span> */}\n            </h3>\n            <Link\n                doOpenInNewTab\n                isButton\n                className=\"Intro__button\"\n                buttonProps={{size: \"xl\", color: \"white-blue-stroke\"}}\n                to=\"mailto:lvittor@itba.edu.ar\"\n            >\n                Contacto {/*aca puedo poner el cv*/}\n            </Link>\n        </MaxWidth>\n    );\n};\n\nexport default Intro;\n","import React, { Component } from 'react';\nimport Label from \"components/_ui/Label/Label\";\nimport './BookGenreTag.scss';\n\nclass BookGenreTag extends Component {\n    state = {\n        genreColor: [],\n    }\n\n    setGenreColor = () => {\n        const { genre, genresList } = this.props;\n        const genreObject = genresList.find(i => i.genre === genre);\n        this.setState({ genreColor: genreObject.color });\n    }\n\n    componentDidMount() {\n        this.setGenreColor();\n    }\n\n    render() {\n        const { genre } = this.props;\n        const { genreColor } = this.state;\n\n        const style = {\n            backgroundColor: genreColor + '33',\n            color: genreColor,\n            border: '1px solid',\n            borderColor: genreColor + '75',\n        }\n\n        return (\n            <div className=\"BookGenreTag__container\">\n                <div className=\"BookGenreTag__white-container\"></div>\n                <Label className=\"BookGenreTag\" style={style}>\n                    <div className=\"BookGenreTag__darkened-text\">\n                        {genre}\n                    </div>\n                    {genre}\n                </Label>\n            </div>\n        );\n    }\n}\n\nexport default BookGenreTag;","import React, { Component } from 'react';\nimport Link from \"components/_ui/Link/Link\";\nimport ReactGA from 'react-ga';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpinner, faClipboardCheck, faHeadphones } from '@fortawesome/free-solid-svg-icons'\nimport classNames from 'classnames';\nimport BookGenreTag from \"./BookGenreTag\";\nimport './BookRow.scss';\n\nclass BookRow extends Component {\n    state = {\n        bookIsClicked: false,\n        bookColor: [],\n    }\n\n    openBook = () => {\n        this.trackEvent('Book Toggle | clicked \"' + this.props.title + '\"');\n        this.setState(prevState => ({\n            bookIsClicked: !prevState.bookIsClicked\n        }));\n    }\n\n    trackEvent = (action) => {\n        ReactGA.event({\n            category: 'User',\n            action: action\n        });\n    }\n\n    render() {\n        const { audiobook, author, categories, coverImg, genresList, goodreadsUrl, genre, inProgress, summary, title } = this.props;\n        const { bookIsClicked } = this.state;\n\n        return (\n            <div className={classNames(\"BookRow__container\", {'BookRow__container--expanded' : bookIsClicked})} onClick={this.openBook}>\n                <div className=\"BookRow\">\n                    <div className=\"BookRow__metas\">\n                        <div className=\"BookRow__title\">\n                            <span className=\"BookRow__title__span\">\n                                {title}\n                            </span>\n                            {audiobook && (\n                                <FontAwesomeIcon className=\"BookRow__icon BookRow__title__icon BookRow__icon--audiobook\" icon={faHeadphones} />\n                            )}\n                        </div>\n                        <div className=\"BookRow__author\">\n                            {author}\n                        </div>\n                    </div>\n                    <div className=\"BookRowGenreTags__container\">\n                        <BookGenreTag\n                            categories={categories}\n                            genresList={genresList}\n                            genre={genre}\n                        />\n                    </div>\n                    <div className=\"BookRow__status\">\n                        {inProgress ? (\n                            <FontAwesomeIcon className=\"BookRow__icon BookRow__icon--progress\" icon={faSpinner} />\n                        ) : (\n                            <FontAwesomeIcon className=\"BookRow__icon BookRow__icon--check\" icon={faClipboardCheck} />\n                        )}\n                    </div>\n                </div>\n                <div className={classNames(\"BookRowSummary__container\", { 'BookRowSummary__container--expanded': bookIsClicked })} onClick={this.openBook}>\n                    <div className=\"BookRowSummary\">\n                        <img className=\"BookRowSummary__image\"\n                            src={coverImg} alt={`${title} book cover`} />\n                        <div className=\"BookRowSummary__summary\">\n                            <div>\n                                {summary}\n                            </div>\n                            <Link\n                                className=\"BookRowSummary__link\"\n                                to={goodreadsUrl}\n                            >\n\n                            Resumen del libro\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BookRow;\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './Card.scss';\n\nclass Card extends Component {\n    static propTypes = {\n        category: PropTypes.oneOf(['l', 'm', 's']),\n        padding: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        category: 'm',\n    };\n\n    getClassName() {\n        const { category, padding, className } = this.props;\n        return classNames(className,\n            'Card',\n            `Card--size-${category}`,\n            {'Card--padding' : padding}\n        );\n    }\n\n    render() {\n        const { category, padding, children, className, ...props } = this.props;\n        return (\n            <div className={this.getClassName()}\n                {...props} >\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport BookRow from \"./BookRow\";\nimport Button from \"components/_ui/Button/Button\";\nimport Card from \"components/_ui/Card/Card\";\nimport Label from \"../_ui/Label/Label\";\nimport './Bookshelf.scss';\n\nclass Bookshelf extends Component {\n\n    render() {\n        const { books, booksToShow, categories, expanded, genreColors, genresList, showMoreBooks } = this.props;\n\n        return (\n            <Card className=\"Bookshelf\" padding>\n                <div className=\"Bookshelf__books__container\">\n                    <div className=\"BookRowLabels\">\n                        <Label category=\"table\" className=\"BookRowLabel\">\n                            Libro\n                        </Label>\n                        {/* <Label category=\"table\" className=\"BookRowLabel BookRowLabel--author\">\n                            Autor\n                        </Label> */}\n                        <Label category=\"table\" className=\"BookRowLabel BookRowLabel--genre\">\n                            Género\n                        </Label>\n                        <Label category=\"table\" className=\"BookRowLabel BookRowLabel--status\">\n                            Estado\n                        </Label>\n                    </div>\n                    {books.slice(0, booksToShow).map((i, key) =>\n                        <BookRow\n                            audiobook={books[key].audiobook}\n                            author={books[key].author}\n                            categories={categories}\n                            color={this.findColor}\n                            coverImg={books[key].coverImg}\n\n                            genre={books[key].genre}\n                            genresList={genresList}\n                            genreColors={genreColors}\n                            goodreadsUrl={books[key].goodreadsUrl}\n                            finished={books[key].finished}\n                            inProgress={books[key].inProgress}\n                            isFiction={books[key].isFiction}\n                            title={books[key].title}\n                            tags={books[key].tags}\n                            key={key}\n                            summary={books[key].summary}\n                        />\n                    )}\n                    <div className=\"Bookshelf__action__container\">\n                        {expanded && (\n                            <p className=\"Bookshelf__action__message\">\n                                Sigo leyendo <span className=\"emoji--small\" role=\"img\" aria-label=\"emoji\">😊</span>\n                            </p>\n                        )}\n                        <Button className=\"Bookshelf__action__button\" category=\"secondary\" onClick={showMoreBooks}>\n                            Ver {expanded ? \"menos\" : \"mas\"}\n                        </Button>\n                    </div>\n                </div>\n            </Card>\n        );\n    }\n}\n\nexport default Bookshelf;\n","import React from \"react\";\n//Help — book API, where r u? GoogleBooks? wip\n//Summaries and images from goodreads.com\n\nconst books = [\n    {\n        title: \"The C Programming Language\",\n        author: \"Brian Kernighan & Dennis Ritchie\",\n        finished: false,\n        inProgress: false,\n        \"tags\": [\n            \"non-fiction\",\n            \"Cs. Computación\",\n        ],\n        genre: \"Cs. Computación\",\n        audiobook: false,\n        isFiction: false,\n        goodreadsUrl: \"https://www.goodreads.com/book/show/515601.The_C_Programming_Language\",\n        coverImg: \"https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1391032531l/515601.jpg\",\n        summary: <div>\n            <p>\n                The C Programming Language (sometimes termed K&R, after its authors' initials) is a computer programming book written by Brian Kernighan and Dennis Ritchie, the latter of whom originally designed and implemented the language, as well as co-designed the Unix operating system with which development of the language was closely intertwined. \n                The book was central to the development and popularization of the C programming language and is still widely read and used today. \n                Because the book was co-authored by the original language designer, and because the first edition of the book served for many years as the de facto standard for the language, the book was regarded by many to be the authoritative reference on C.\n            </p>\n        </div>\n    },\n];\n\nexport default books;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport Bookshelf from \"./Bookshelf\";\n//import BookGenreCharts from \"./BookGenreCharts\";\nimport books from \"components/Bookshelf/books.js\";\n\nclass BookshelfContainer extends Component {\n    state = {\n        booksToShow: 7,\n        expanded: false,\n        categories: {},\n        genres: {},\n        graphIsShowingGenres: true,\n        categoryColors: [\"#d8d0c9\", \"#c7bcb2\"],\n        // genreColors: [\"#f5cf63\", \"#afd89f\", \"#ffa79e\", \"#7aa8f7\", \"#ada3ff\",\n        //     \"#7f7f7f\", \"#ff8075\", \"#a9a0f7\", \"#7faefa\", \"#7faeff\",],\n        genreColors: [\n            \"#5393fe\",\n            \"#ab88f9\",\n            \"#e979e3\",\n            \"#ff6ec0\",\n            \"#ff7094\",\n            \"#ff8367\",\n            \"#ffa03a\",\n            \"#c8be00\",\n            \"#94ba1f\",\n            \"#5fb23b\",\n            \"#ff8075\",\n            \"#ff6ea0\",\n            \"#e070d3\",\n            \"#72DB83\",\n            \"#C27BE3\",\n            \"#4CADC6\",\n            \"#F3A569\",\n            \"#9283ff\",],\n        bookListRows: true,\n    }\n\n    showMoreBooks = () => {\n        const totalBooks = books.length;\n\n        ReactGA.event({\n            category: 'User',\n            action: 'Bookshelf | Toggled more/less books'\n        });\n\n        this.state.booksToShow === 7 ? (\n            this.setState({ booksToShow: totalBooks, expanded: true })\n        ) : (\n            this.setState({ booksToShow: 7, expanded: false })\n        )\n    };\n\n    getGenreCounts() {\n        const { categoryColors, genreColors } = this.state;\n        const fullGenreList = [];\n        let counts = {};\n        let categoriesDict = [];\n        let genresDict = [];\n\n        for (let i = 0; i < books.length; i++) {\n            for (let j = 0; j < books[i].tags.length; j++) {\n                fullGenreList.push(books[i].tags[j]);\n            }\n        }\n\n        fullGenreList.sort().forEach(num => {\n            if (!counts[num]) counts[num] = 1;\n            else counts[num]++;\n        });\n\n        let catColorIndex = 0;\n        let genreColorIndex = 0;\n        Object.keys(counts).forEach(function (key, index, i) {\n            if (key === \"fiction\" || key === \"non-fiction\") {\n                categoriesDict.push({ genre: key, value: counts[key], color: categoryColors[catColorIndex]});\n                catColorIndex++;\n            } else {\n                genresDict.push({ genre: key, value: counts[key], color: genreColors[genreColorIndex]});\n                genreColorIndex++;\n            }\n        });\n\n        let { categoriesList, genresList } = { ...this.state };\n        genresList = genresDict;\n        categoriesList = categoriesDict;\n        this.setState({ categoriesList, genresList });\n    }\n\n    toggleBookListStyle = () => {\n        this.setState(prevState => ({\n            bookListRows: !prevState.bookListRows\n        }));\n    }\n\n    componentWillMount() {\n        this.getGenreCounts();\n    }\n\n    render() {\n        const { bookListRows, booksToShow, categories, categoryColors, expanded, genresList, genreColors } = this.state;\n\n        return (\n            <div className=\"BookshelfContainer\">\n                <h2 className=\"Bookshelf__header\">\n                    <span role=\"img\" aria-label=\"emoji\" className=\"Bookshelf__header__emoji emoji\">📚</span> Bookshelf\n                </h2>\n                <p>\n                    Lo que estoy leyendo\n                    {/*Lo que estoy leyendo y lo que he leído.*/}\n                </p>\n                {/* <Button onClick={this.toggleBookListStyle} style={{\"marginBottom\": \"10px\"}}>\n                    Change to {bookListRows ? \"cards\" : \"rows\"}\n                </Button> */}\n                {/* <div className=\"Bookshelf__genres__container\">\n                    <BookGenreCharts\n                        books={books}\n                        genres={genres}\n                        categories={categories} />\n                </div> */}\n                <Bookshelf\n                    books={books}\n                    booksToShow={booksToShow}\n                    categories={categories}\n                    genresList={genresList}\n                    categoryColors={categoryColors}\n                    genreColors={genreColors}\n                    bookListRows={bookListRows}\n                    showMoreBooks={this.showMoreBooks}\n                    expanded={expanded}\n                />\n            </div>\n        );\n    }\n}\n\nexport default BookshelfContainer;\n","import React from 'react';\nimport { StaticQuery, graphql } from \"gatsby\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport Button from \"components/_ui/Button/Button\";\nimport Link from \"components/_ui/Link/Link\";\nimport Label from \"components/_ui/Label/Label\";\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport videoCurrents from 'content/work/2019-11-25-currents/currents-info.mp4';\nimport './Project.scss';\n\nconst Project = ({ demo, description, github, hasImageBorder, images, imgType, inspiration, readMore, tech, title }) => {\n    return (\n        <StaticQuery\n            query={graphql`\n            query PROJECT_QUERY {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n            }\n        `}\n            render={data => (\n                <div className=\"Project__container\">\n                    <div className=\"Project__info__container\">\n                        <h2 className=\"Project__title\">\n                            {title}\n                        </h2>\n                        <div className=\"Project__about\">\n                            {inspiration && (\n                                <div className=\"Project__inspiration\">\n                                    <h4 clas3sName=\"Project__inspiration__title\">\n                                        Inspired by:\n                                    </h4>\n                                    <a className=\"Project__inspiration__link\"\n                                        href={inspiration.link_src}\n                                        rel=\"noopener noreferrer\" target=\"_blank\">\n                                        {inspiration.title}\n                                    </a>\n                                </div>\n                            )}\n                            <span>\n                                {/* {inspiration.title} */}\n                            </span>\n                            {demo && (\n                                <p>\n                                    <Link\n                                        to={demo}\n                                        isButton\n                                        buttonProps={{ color: \"white-blue-stroke\" }}\n                                    >\n                                        Demo\n                                </Link>\n                                </p>\n                            )}\n                            <div>\n                                {description}\n                            </div>\n\n                            {readMore && (\n                                <p>\n                                    <Link\n                                        to={readMore}\n                                        isButton\n                                        buttonProps={{ size: \"l\" }}\n                                    >\n                                        Read More\n                                </Link>\n                                </p>\n                            )}\n                            {github && (\n                                <p>\n                                    <FontAwesomeIcon className=\"Project__link__icon\" icon={faGithub} />\n                                    <Link to={github} className=\"Project__inspiration__link\">\n                                        Github\n                                 </Link>\n                                </p>\n                            )}\n                        </div>\n                        <div className=\"Project__tech__section\">\n                            <Label className=\"Project__tech__title\" category=\"primary\">\n                                tools\n                        </Label>\n                            {Object.keys(tech).map((key) =>\n                                <Label className=\"Project__tech\"\n                                    key={key}\n                                >\n                                    {tech[key]}\n                                </Label>\n                            )}\n                        </div>\n                    </div>\n                    <div className={classNames(\"Project__image__container\", {\n                        'Project__image__container--has-link': demo || readMore\n                    })}>\n                        {images.map((image, i) => (\n                            <Link\n                                key={i}\n                                className=\"Project__image__link\"\n                                to={demo || readMore}\n                            >\n                                {imgType !== 'mp4' ? (\n                                    <img className={classNames(\"Project__image\", {\n                                        \"Project__image--hasBorder\": hasImageBorder\n                                    })}\n                                        src={require(`./images/${image}.png`)}\n                                        alt=\"Project\"\n                                    />\n                                ) : (\n                                        <div className={classNames(\"Project__image Project__image--currents\", {\n                                            \"Project__image--hasBorder\": hasImageBorder\n                                        })}>\n                                            <video\n                                                autoPlay loop muted playsInline\n                                                poster=\"./currents-info-map.png\"\n                                            >\n                                                <source src={videoCurrents} type=\"video/mp4\" />\n                                            </video>\n                                    </div>\n\n                                )}\n                                {demo && (\n                                    <div className=\"Project__image__action\">\n                                        <Button\n                                            className=\"Project__image__button\"\n                                            category=\"secondary\"\n                                        >\n                                            Go to demo\n                                        </Button>\n                                    </div>\n                                )}\n                                {readMore && (\n                                    <div className=\"Project__image__action\">\n                                        <Button\n                                            className=\"Project__image__button\"\n                                            category=\"secondary\"\n                                        >\n                                            Read More\n                                        </Button>\n                                    </div>\n                                )}\n                            </Link>\n                        ))}\n                    </div>\n                </div>\n            )}\n        />\n    );\n}\n\nProject.propTypes = {\n    demo: PropTypes.string,\n    description: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    github: PropTypes.string,\n    hasImageBorder: PropTypes.bool,\n    images: PropTypes.array,\n    inspiration: PropTypes.string,\n    tech: PropTypes.array,\n    title: PropTypes.string,\n};\n\n\n\n// class Project extends Component {\n//     static propTypes = {\n//         demo: PropTypes.string,\n//         description: PropTypes.oneOfType([\n//             PropTypes.string,\n//             PropTypes.object,\n//         ]),\n//         github: PropTypes.string,\n//         hasImageBorder: PropTypes.bool,\n//         images: PropTypes.array,\n//         inspiration: PropTypes.string,\n//         tech: PropTypes.array,\n//         title: PropTypes.string,\n//     };\n\n\n//     render() {\n//         const { demo, description, github, hasImageBorder, images, inspiration, tech, title } = this.props;\n//         return (\n//             <div className=\"Project__container\">\n//                 <div className=\"Project__info__container\">\n//                     <h2 className=\"Project__title\">\n//                         { title }\n//                     </h2>\n//                     <div className=\"Project__about\">\n//                         {inspiration && (\n//                             <div className=\"Project__inspiration\">\n//                                 <h4 clas3sName=\"Project__inspiration__title\">\n//                                     Inspired by:\n//                             </h4>\n//                                 <a className=\"Project__inspiration__link\"\n//                                     href={inspiration.link_src}\n//                                     rel=\"noopener noreferrer\" target=\"_blank\">\n//                                     {inspiration.title}\n//                                 </a>\n//                             </div>\n//                         )}\n//                         <span>\n//                             {/* {inspiration.title} */}\n//                         </span>\n//                         {demo && (\n//                             <p>\n//                                 <Link\n//                                     to={demo}\n//                                     isButton\n//                                 >\n//                                     Demo\n//                                 </Link>\n//                             </p>\n//                         )}\n//                         <div>\n//                             { description }\n//                         </div>\n\n//                         {github && (\n//                             <p>\n//                                 <FontAwesomeIcon className=\"Project__link__icon\" icon={faGithub} />\n//                                 <Link to={github} className=\"Project__inspiration__link\">\n//                                     Github\n//                                  </Link>\n//                             </p>\n//                         )}\n//                     </div>\n//                     <div className=\"Project__tech__section\">\n//                         <Label className=\"Project__tech__title\" category=\"primary\">\n//                             tools\n//                         </Label>\n//                         {Object.keys(tech).map((key) =>\n//                             <Label className=\"Project__tech\"\n//                                 key={key}\n//                             >\n//                             { tech[key] }\n//                             </Label>\n//                         )}\n//                     </div>\n//                 </div>\n//                 <div className={classNames(\"Project__image__container\", {\n//                     'Project__image__container--has-link': demo\n//                 })}>\n\n//                     {images.map((image, i) => (\n//                         <Link\n//                             key={i}\n//                             className=\"Project__image__link\"\n//                             to={demo}\n//                         >\n//                             <img className={classNames(\"Project__image\", {\n//                                 \"Project__image--hasBorder\": hasImageBorder\n//                             })}\n//                                 src={require(`./images/${image}.png`)}\n//                                 alt=\"Project\"\n//                             />\n//                             {demo && (\n//                                 <div className=\"Project__image__action\">\n//                                     <Button\n//                                         className=\"Project__image__button\"\n//                                         category=\"secondary\"\n//                                 >\n//                                     Go to demo\n//                                     </Button>\n//                                 </div>\n//                             )}\n//                         </Link>\n//                     ))}\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n\nexport default Project;\n","import React from \"react\";\n\nconst projects = {\n    // currents: {\n    //     title: \"Currents Dashboard\",\n    //     projectType: \"dashboard\",\n    //     description: <div>\n    //         A look into the Currents Attention analytics dashboard built at Parse.ly.\n    //     </div>,\n    //     readMore: \"./currents\",\n    //     \"tech\": [\n    //         \"react\",\n    //         \"redux\",\n    //         \"d3\",\n    //         \"mixpanel\",\n    //         \"figma\"\n    //     ],\n    //     hasImageBorder: true,\n    //     imgType: \"mp4\",\n    //     \"img_src\": [\n    //         \"project-currents-01\"\n    //     ],\n    // },\n    candyCrush: {\n        title: \"Candy Crush 🎮\",\n        projectType: \"game development\",\n        description: <div>\n            Versión reducida del clásico juego Candy Crush.\n        </div>,\n        github: \"https://github.com/lvittor/Candy-Crush\",\n        code: \"\",\n        \"tech\": [\n            \"Java\",\n            \"JavaFX\",\n        ],\n        hasImageBorder: true,\n        \"img_src\": [\n            \"project-candy-crush-01\"\n        ],\n    },\n    tree: {\n        title: \"Tree Analysis 🌲\",\n        projectType: \"data analysis\",\n        description: <div>\n           Procesamiento de datos de árboles en el espacio público de una ciudad.\n        </div>,\n        github: \"https://github.com/lvittor/tree-analysis\",\n        code: \"\",\n        \"tech\": [\n            \"C\"\n        ],\n        hasImageBorder: true,\n        \"img_src\": [\n            \"project-tree-analysis-01\"\n        ],\n    },\n    weatherStatus: {\n        title: \"Weather Status ☁️\",\n        projectType: \"data analysis\",\n        description: <div>\n            Página web de las condiciones climáticas actuales entre varias ciudades, separadas por país.\n        </div>,\n        github: \"https://github.com/lvittor/weather-status\",\n        code: \"\",\n        \"tech\": [\n            \"XSLT\",\n            \"CSS\",\n            \"XQuery\",\n            \"Shell\"\n        ],\n        hasImageBorder: true,\n        \"img_src\": [\n            \"project-weather-status-01\"\n        ],\n    },\n    /*prist: {\n        title: \"Prist | A Gatsby & Prismic Starter\",\n        projectType: \"web\",\n        description: <div>\n            A light-themed starter powered\n            by <a href=\"https://www.gatsbyjs.org/\" rel=\"noopener noreferrer\" target=\"_blank\">Gatsby v2</a> and <a href=\"https://www.gatsbyjs.org/\" rel=\"noopener noreferrer\" target=\"_blank\">Prismic</a> to showcase portfolios and blogs.\n            <br />\n            <br />\n            <a href=\"https://www.gatsbyjs.org/starters/margueriteroth/gatsby-prismic-starter-prist/\" rel=\"noopener noreferrer\" target=\"_blank\">Gatsby starter doc</a>\n        </div>,\n        demo: \"https://prist.marguerite.io/\",\n        github: \"https://github.com/margueriteroth/gatsby-prismic-starter-prist\",\n        \"tech\": [\n            \"gatsby\",\n            \"graphql\",\n            \"cms\",\n            \"react\",\n            \"figma\",\n            \"netlify\",\n        ],\n        hasImageBorder: true,\n        \"img_src\": [\n            \"project-prist-01\"\n        ],\n    },\n    /*retention: {\n        title: \"Parse.ly Analytics Data Retention Upsells\",\n        projectType: \"web\",\n        description: <div>\n            Working through adding more obvious data retention limit communication in the analytics dashboard and allowing users to upgrade.\n        </div>,\n        readMore: \"/data-retention\",\n        \"tech\": [\n            \"angular\",\n            \"less\",\n            \"figma\",\n        ],\n        hasImageBorder: true,\n        \"img_src\": [\n            \"project-data-retention-01\"\n        ],\n    },*/\n    /*albondiga: {\n        title: \"Albondiga | App for requesting some dinner 🍝\",\n        projectType: \"web\",\n        description: \"I developed this project as a birthday gift for my partner — a lover of spaghetti and meatballs. The recipient can pick the ingredients making up a spaghetti and meatballs dinner: pasta type, sauce, drinks, etc.\",\n        demo: \"https://margueriteroth.github.io/albondiga/\",\n        github: \"https://github.com/margueriteroth/albondiga\",\n        \"tech\": [\n            \"react\",\n            \"firebase\",\n            \"scss\",\n            \"bem\",\n            \"node\"\n        ],\n        \"img_src\": [\n            \"project-albondiga-01\"\n        ],\n    },\n    */\n};\n\nexport default projects;\n","import React from \"react\"\nimport Intro from \"components/Intro/Intro\"\nimport Layout from \"components/Layout/Layout\"\nimport MaxWidth from \"components/_ui/MaxWidth/MaxWidth\";\nimport BookshelfContainer from \"components/Bookshelf/BookshelfContainer\";\nimport Project from \"components/Project/Project\";\nimport projects from \"components/Project/projects.js\";\nimport SEO from \"components/SEO/SEO\"\n\nconst Home = () => (\n    <Layout showNavigation showSocialCol showFooter>\n        <SEO />\n        <Intro />\n        <MaxWidth id=\"work\" className=\"Home__projects\">\n            <h1>\n                Proyectos\n            </h1>\n            {Object.keys(projects).map((key) =>\n                <Project\n                    demo={projects[key].demo}\n                    description={projects[key].description}\n                    github={projects[key].github}\n                    hasImageBorder={projects[key].hasImageBorder}\n                    images={projects[key].img_src}\n                    imgType={projects[key].imgType}\n                    inspiration={projects[key].inspiration}\n                    projectType={projects[key].projectType}\n                    tech={projects[key].tech}\n                    title={projects[key].title}\n                    readMore={projects[key].readMore}\n                    key={key}\n                />\n            )}\n            <BookshelfContainer />\n        </MaxWidth>\n    </Layout>\n);\n\nexport default Home;\n","module.exports = __webpack_public_path__ + \"static/project-tree-analysis-01-e858dd0c849a0ab47272d924a6acd77b.png\";","module.exports = __webpack_public_path__ + \"static/project-weather-status-01-e3aa608cc0ddd60098794995b256ad35.png\";","var map = {\n\t\"./project-albondiga-01.png\": \"ODp2\",\n\t\"./project-candy-crush-01.png\": \"mr+F\",\n\t\"./project-currents-01.png\": \"2H/2\",\n\t\"./project-data-retention-01.png\": \"3vFR\",\n\t\"./project-dvs-01.png\": \"o+Lf\",\n\t\"./project-numeros-01.png\": \"xO/L\",\n\t\"./project-prist-01.png\": \"9w+Y\",\n\t\"./project-tree-analysis-01.png\": \"TMOz\",\n\t\"./project-weather-status-01.png\": \"Uz1U\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"Y7Ks\";","module.exports = __webpack_public_path__ + \"static/project-candy-crush-01-013b3cc811fe41ad4b33458c195189b9.png\";","module.exports = __webpack_public_path__ + \"static/project-dvs-01-a82c9e845ef7071e535d731f858ef6a3.png\";","module.exports = __webpack_public_path__ + \"static/project-numeros-01-879a0c2ef4e8d41924482df8874987e3.png\";"],"sourceRoot":""}