{"version":3,"sources":["webpack:///./src/components/PageAuthor/PageAuthor.jsx","webpack:///./src/components/PostDetail/PostDetail.jsx","webpack:///./src/templates/Post/Post.jsx"],"names":["PageAuthor","postLocation","className","query","render","data","classNames","fluid","headshot","childImageSharp","href","target","Link","doOpenInNewTab","to","icon","faGithub","faLinkedinIn","faMedium","PostDetail","date","demoUrl","projectRepo","isButton","Post","mdx","frontmatter","slug","ogImagePath","ogimage","fixed","src","twitterImagePath","twitterimage","SEO","title","description","intro","image","twitterImage","Layout","knockoutHeader","showNavigation","showFooter","MaxWidth","size","Label","category","body","TOC"],"mappings":"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","file":"component---src-templates-post-post-jsx-0bc08d3e8ed732e47dbd.js","sourcesContent":["import React from \"react\"\nimport classNames from \"classnames\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub, faLinkedinIn, faMedium } from '@fortawesome/free-brands-svg-icons'\nimport Link from \"components/_ui/Link/Link\"\nimport \"./PageAuthor.scss\";\n\nconst PageAuthor = ({ postLocation, className }) => {\n    return (\n        <StaticQuery\n            query={graphql`\n                query HEADSHOT_QUERY {\n                    headshot: file(relativePath: { regex: \"/viti.jpg/\" }) {\n                        childImageSharp {\n                            fluid {\n                                ...GatsbyImageSharpFluid\n                            }\n                        }\n                    }\n                }\n            `}\n            render={data => (\n                <div className={classNames(\"PageAuthor\", `PageAuthor--${postLocation}`, className)}>\n                    <div className=\"PageAuthor__image__container\">\n                        <Img fluid={data.headshot.childImageSharp.fluid} className=\"PageAuthor__image\"/>\n                    </div>\n                    <div className=\"PageAuthor__info\">\n                        <h4 className=\"PageAuthor__info__title\">\n                            Lucas Vittor\n                        </h4>\n                        <div className=\"PageAuthor__info__description\">\n                            Estudio Inform√°tica en el <a href=\"https://www.itba.edu.ar/\" target=\"_blank\">ITBA</a>. Escribo. <br/>\n                        </div>\n                        <div className=\"PageAuthor__info__links\">\n                            <Link\n                                className=\"PageAuthor__info__link\"\n                                doOpenInNewTab\n                                to=\"https://github.com/margueriteroth\">\n                                <FontAwesomeIcon\n                                    icon={faGithub}\n                                />\n                            </Link>\n                            <Link\n                                className=\"PageAuthor__info__link\"\n                                doOpenInNewTab\n                                to=\"https://dribbble.com/marrrguerite\">\n                                <FontAwesomeIcon\n                                    icon={faLinkedinIn}\n                                />\n                            </Link>\n                            <Link\n                                className=\"PageAuthor__info__link\"\n                                doOpenInNewTab\n                                to=\"https://twitter.com/marrrguerite\">\n                                <FontAwesomeIcon\n                                    icon={faMedium}\n                                />\n                            </Link>\n                            <Link\n                                className=\"PageAuthor__info__link\"\n                                doOpenInNewTab\n                                to=\"mailto:hello@marguerite.io\">\n                                Email\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            )}\n        />\n    )\n};\n\nexport default PageAuthor\n","import React from \"react\"\nimport classNames from 'classnames'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport Link from \"components/_ui/Link/Link\"\nimport PropTypes from 'prop-types';\nimport './PostDetail.scss';\n\n\nconst PostDetail = ({date, demoUrl, projectRepo, className}) => {\n    return (\n        <div\n            className={classNames(\"PostDetail__container\", className)}>\n            <div className=\"PostDetail\">\n                <div className=\"PostDetail__item\">\n                    {(demoUrl == \"\") ? \"\" :\n                    <Link\n                        className=\"PostDetail__item__button\"\n                        isButton\n                        doOpenInNewTab\n                        to={demoUrl}>\n                        Starter Demo\n                    </Link>\n                    }\n                    {(projectRepo == \"\") ? \"\" :\n                    <Link\n                        className=\"PostDetail__item__ga-link\"\n                        doOpenInNewTab\n                        to={projectRepo}>\n                        <FontAwesomeIcon\n                            className=\"PostDetail__item__ga-link__icon\"\n                            icon={faGithub}\n                        />\n                        Project Github files\n                    </Link>\n                    }\n                </div>\n                <div className=\"PostDetail__item\">\n                    <div className=\"PostDetail__item__date\">\n                        Escrito el {date}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPostDetail.propTypes = {\n};\n\nexport default PostDetail;\n","import React from \"react\"\nimport { graphql } from 'gatsby'\nimport classNames from 'classnames'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport Label from 'components/_ui/Label/Label'\nimport Layout from \"components/Layout/Layout\"\nimport Link from 'components/_ui/Link/Link'\nimport PageAuthor from 'components/PageAuthor/PageAuthor'\nimport PostDetail from \"components/PostDetail/PostDetail\"\nimport Objectives from 'components/Objectives/Objectives'\nimport MaxWidth from 'components/_ui/MaxWidth/MaxWidth'\nimport TOC from 'components/TOC/TOC'\nimport SEO from \"components/SEO/SEO\"\nimport './Post.scss'\n\nexport default ({ data }) => {\n    let Post = data.mdx\n    let slug = Post.frontmatter.slug\n    //let featuredImgFluid = Post.frontmatter.featuredImage.childImageSharp.fluid\n    {/*let goals = \"\"\n    if (!!(Post.frontmatter.goals)){ goals = Post.frontmatter.goals.childMdx }\n    */}\n    let demoUrl = Post.frontmatter.demoUrl\n    let projectRepo = Post.frontmatter.projectRepo\n    let date = Post.frontmatter.date\n\n    const ogImagePath = \"https://marguerite.io\" + Post.frontmatter.ogimage.childImageSharp.fixed.src\n    const twitterImagePath = \"https://marguerite.io\" + Post.frontmatter.twitterimage.childImageSharp.fixed.src\n\n\n    return (\n        <>\n            <SEO\n                title={`${Post.frontmatter.title}`}\n                description={`${Post.frontmatter.intro}`}\n                image={ogImagePath}\n                twitterImage={twitterImagePath}\n            />\n            <Layout knockoutHeader showNavigation showFooter className={classNames(\"Post\", `Post--${Post.frontmatter.slug}`)}>\n                <div>\n                    <MaxWidth className=\"Post__hero\" size=\"xl\">\n                        <div className=\"Post__hero__content\">\n                            <Label className=\"Post__hero__label\" category=\"primary\">\n                                <Link className=\"Post__hero__label__link\" to={'/blog'}>\n                                    Blog </Link>\n                            </Label>\n                            <h1 className=\"Post__hero__title\">\n                                {Post.frontmatter.title}\n                            </h1>\n                        </div>\n                    </MaxWidth>\n\n\n                    {/* {Post.frontmatter.description && (\n                        <h2 className=\"Post__hero__description\">\n                            {Post.frontmatter.description}\n                        </h2>\n                    )} */}\n\n                    {/* <PageHero\n                        className=\"Post__hero__image\"\n                        page={slug}\n                        image={featuredImgFluid}\n                    /> */}\n\n                    <MaxWidth size=\"l\" className=\"Post__content__container\">\n                        <div className=\"Post__content\">\n                            <PostDetail\n                                className=\"Post__content__detail\"\n                                projectRepo={projectRepo}\n                                demoUrl={demoUrl}\n                                date={date}\n                            />\n                            <div className=\"Post__content__body\">\n                               {/*(goals == \"\") ? \"\" :\n                                   <Objectives objectives={goals.body} />\n                               */}\n\n                                <MDXRenderer>\n                                    {Post.body}\n                                </MDXRenderer>\n                                <PageAuthor className=\"Post__author\" />\n                            </div>\n                            <TOC\n                                className=\"Post__content__TOC\"\n                            />\n                        </div>\n\n                    </MaxWidth>\n                </div>\n            </Layout>\n        </>\n\n    )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      body\n      fields {\n        slug\n      }\n      frontmatter {\n        slug\n        isFeatured\n        title\n        intro\n        section\n        demoUrl\n        projectRepo\n        date(formatString: \"DD/MM/YYYY\", locale: \"es\")\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 2500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        ogimage {\n         childImageSharp {\n           fixed {\n             src\n            }\n          }\n        }\n        twitterimage {\n         childImageSharp {\n           fixed {\n             src\n            }\n          }\n        }\n      }\n    }\n  }\n`\n// DATE FORMAT: CHANGE IN GRAPHQL\n// date(formatString: \"MMMM D, YYYY\")\n\n\n// frontmatter {\n//   slug\n//   isFeatured\n//   title\n//   intro\n//   section\n//   demoUrl\n//   projectRepo\n//   date(formatString: \"DD/MM/YYYY\", locale: \"es\")\n//   featuredImage {\n//     childImageSharp {\n//       fluid(maxWidth: 2500) {\n//         ...GatsbyImageSharpFluid\n//       }\n//     }\n//   }\n"],"sourceRoot":""}