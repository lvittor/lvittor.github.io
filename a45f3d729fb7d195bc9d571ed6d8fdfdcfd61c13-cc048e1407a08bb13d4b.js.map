{"version":3,"sources":["webpack:///./node_modules/d3-geo/src/projection/resample.js","webpack:///./node_modules/d3-geo/src/projection/index.js","webpack:///./node_modules/d3-geo/src/clip/rejoin.js","webpack:///./node_modules/d3-geo/src/polygonContains.js","webpack:///./node_modules/d3-geo/src/clip/antimeridian.js","webpack:///./node_modules/d3-geo/src/clip/rectangle.js","webpack:///./node_modules/d3-geo/src/clip/line.js","webpack:///./node_modules/d3-geo/src/identity.js","webpack:///./node_modules/d3-geo/src/projection/mercator.js","webpack:///./node_modules/d3-geo/src/clip/buffer.js","webpack:///./node_modules/d3-geo/src/clip/circle.js","webpack:///./node_modules/d3-geo/src/math.js","webpack:///./node_modules/d3-geo/src/path/bounds.js","webpack:///./node_modules/d3-geo/src/projection/fit.js","webpack:///./node_modules/d3-geo/src/cartesian.js","webpack:///./node_modules/d3-geo/src/rotation.js","webpack:///./node_modules/d3-geo/src/pointEqual.js","webpack:///./node_modules/d3-geo/src/noop.js","webpack:///./node_modules/d3-geo/src/clip/index.js","webpack:///./node_modules/d3-geo/src/compose.js","webpack:///./node_modules/d3-geo/src/transform.js","webpack:///./node_modules/d3-geo/src/stream.js","webpack:///./node_modules/d3-geo/src/adder.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/pairs.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/descending.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/variance.js","webpack:///./node_modules/d3-array/src/deviation.js","webpack:///./node_modules/d3-array/src/extent.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/constant.js","webpack:///./node_modules/d3-array/src/identity.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/histogram.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack:///./node_modules/d3-array/src/threshold/scott.js","webpack:///./node_modules/d3-array/src/max.js","webpack:///./node_modules/d3-array/src/mean.js","webpack:///./node_modules/d3-array/src/median.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-array/src/min.js","webpack:///./node_modules/d3-array/src/permute.js","webpack:///./node_modules/d3-array/src/scan.js","webpack:///./node_modules/d3-array/src/shuffle.js","webpack:///./node_modules/d3-array/src/sum.js","webpack:///./node_modules/d3-array/src/transpose.js","webpack:///./node_modules/d3-array/src/zip.js","webpack:///./node_modules/d3-geo/src/path/area.js","webpack:///./node_modules/d3-geo/src/path/centroid.js","webpack:///./node_modules/d3-geo/src/path/context.js","webpack:///./node_modules/d3-geo/src/path/measure.js","webpack:///./node_modules/d3-geo/src/path/string.js","webpack:///./node_modules/d3-geo/src/path/index.js","webpack:///./node_modules/d3-geo/src/constant.js","webpack:///./node_modules/d3-geo/src/circle.js"],"names":["cosMinDistance","delta2","project","resampleLineTo","x0","y0","lambda0","a0","b0","c0","x1","y1","lambda1","a1","b1","c1","depth","stream","dx","dy","d2","a","b","c","m","phi2","lambda2","p","x2","y2","dx2","dy2","dz","point","lambda00","x00","y00","a00","b00","c00","resampleStream","lineStart","lineEnd","polygonStart","ringStart","polygonEnd","x","y","NaN","linePoint","lambda","phi","cartesian","ringPoint","ringEnd","this","resampleNone","transformRadians","scaleTranslate","k","sx","sy","transform","invert","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","deltaLambda","deltaPhi","deltaGamma","theta","preclip","postclip","identity","projection","recenter","center","apply","compose","resample","reset","r","transformRotate","_","arguments","length","undefined","clipAngle","clipExtent","scale","translate","angle","reflectX","reflectY","precision","fitExtent","extent","object","fit","fitSize","size","fitWidth","width","fitHeight","height","Intersection","points","other","entry","z","o","e","v","n","link","array","i","subject","clip","segments","forEach","segment","p0","p1","push","sort","compareIntersection","startInside","start","current","isSubject","interpolate","sum","longitude","sinPhi","normal","winding","polygon","ring","point0","phi0","sinPhi0","cosPhi0","j","sinPhi1","cosPhi1","point1","phi1","delta","sign","absDelta","antimeridian","add","arc","intersection","phiArc","_clean","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","clean","from","to","direction","clipRectangle","visible","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","rejoin","result","polygonInside","cleanInside","Math","max","min","ax","ay","t0","t1","mercatorRaw","mercatorProjection","reclip","t","line","lines","pop","concat","shift","cr","radius","smallRadius","notHemisphere","intersect","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","A","B","u","w","uu","t2","q","polar","q1","code","v0","v00","point2","exp","epsilon","epsilon2","pi","PI","halfPi","quarterPi","tau","degrees","radians","abs","atan","atan2","cos","ceil","log","floor","pow","sin","sqrt","tan","acos","asin","haversin","Infinity","boundsStream","bounds","fitBounds","h","spherical","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","d","l","rotationIdentity","round","rotateRadians","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","forward","coordinates","noop","validSegment","sink","clipLine","ringBuffer","ringSink","polygonStarted","pointRing","sphere","pointVisible","pointLine","ringSegments","filter","transformer","methods","s","TransformStream","key","prototype","constructor","streamGeometry","geometry","streamGeometryType","hasOwnProperty","type","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","Adder","_add","temp","valueOf","adder","bv","av","f","compare","ascending","left","lo","hi","mid","right","ascendingBisect","bisector","bisectRight","bisectLeft","bisect","pair","pairs","Array","i0","i1","value0","n0","values0","values1","values","reduce","value","mean","valueof","isNaN","number","variance","slice","map","stop","step","range","e10","e5","e2","reverse","ticks","count","tickIncrement","isFinite","power","LN10","error","tickStep","step0","step1","LN2","domain","threshold","sturges","histogram","data","xz","tz","isArray","bin","bins","constant","thresholds","call","quantile","deviation","numbers","merged","arrays","indexes","permutes","xi","xj","random","matrix","transpose","row","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","area","areaPointFirst","areaPoint","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","lengthSum","lengthStream","lengthPointFirst","lengthPoint","PathString","_string","circle","_circle","join","projectionStream","contextStream","path","measure","circleStream","cosRadius","sinRadius","circleRadius"],"mappings":"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","file":"a45f3d729fb7d195bc9d571ed6d8fdfdcfd61c13-cc048e1407a08bb13d4b.js","sourcesContent":["import { cartesian } from \"../cartesian.js\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math.js\";\nimport { transformer } from \"../transform.js\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport { cos, degrees, radians, sin, sqrt } from \"../math.js\";\nimport { rotateRadians } from \"../rotation.js\";\nimport { transformer } from \"../transform.js\";\nimport { fitExtent, fitSize, fitWidth, fitHeight } from \"./fit.js\";\nimport resample from \"./resample.js\";\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function point(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx;\n    y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n\n  function transform(x, y) {\n    x *= sx;\n    y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150,\n      // scale\n  x = 480,\n      y = 250,\n      // translate\n  lambda = 0,\n      phi = 0,\n      // center\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      // pre-rotate\n  alpha = 0,\n      // post-rotate angle\n  sx = 1,\n      // reflectX\n  sy = 1,\n      // reflectX\n  theta = null,\n      preclip = clipAntimeridian,\n      // pre-clip angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // post-clip extent\n  delta2 = 0.5,\n      // precision\n  projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function (_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function (_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function (_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function (_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function (_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function (width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function (height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}","import pointEqual from \"../pointEqual.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n\n  this.e = entry; // is an entry?\n\n  this.v = false; // visited\n\n  this.n = this.p = null; // next & previous\n} // A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n\n\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x; // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n\n      for (i = 0; i < n; ++i) {\n        stream.point((p0 = segment[i])[0], p0[1]);\n      }\n\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }\n\n    points = current.z;\n    stream.lineStart();\n\n    do {\n      current.v = current.o.v = true;\n\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n\n        current = current.p;\n      }\n\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n\n  a.n = b = array[0];\n  b.p = a;\n}","import adder from \"./adder.js\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian.js\";\nimport { abs, asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sign, sin, tau } from \"./math.js\";\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi) return point[0];else return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function (polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum.reset();\n  if (sinPhi === 1) phi = halfPi + epsilon;else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  } // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}","import clip from \"./index.js\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math.js\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}","import { abs, epsilon } from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport { merge } from \"d3-array\";\nvar clipMax = 1e9,\n    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do {\n        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      } while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n    x_,\n        y_,\n        v_,\n        // previous point\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n\n      return winding;\n    } // Buffer geometry within a polygon and then clip it en masse.\n\n\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n\n      if (cleanInside || visible) {\n        stream.polygonStart();\n\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n\n        stream.polygonEnd();\n      }\n\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    } // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n\n\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}","export default function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}","export default function (x) {\n  return x;\n}","import { atan, exp, halfPi, log, pi, tan, tau } from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function () {\n  return mercatorProjection(mercatorRaw).scale(961 / tau);\n}\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}","import noop from \"../noop.js\";\nexport default function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}","import { cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical } from \"../cartesian.js\";\nimport { circleStream } from \"../circle.js\";\nimport { abs, cos, epsilon, pi, radians, sqrt } from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\nexport default function (radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  } // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n\n\n  function clipLine(stream) {\n    var point0, // previous point\n    c0, // code for previous point\n    v0, // visibility of previous point\n    v00, // visibility of first point\n    _clean; // no intersections\n\n\n    return {\n      lineStart: function lineStart() {\n        v00 = v0 = false;\n        _clean = 1;\n      },\n      point: function point(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n\n        if (v !== v0) {\n          _clean = 0;\n\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t; // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            _clean = 0;\n\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function lineEnd() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function clean() {\n        return _clean | (v00 && v0) << 1;\n      }\n    };\n  } // Intersects the great circle between a and b with the clip circle.\n\n\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\n    var n1 = [1, 0, 0],\n        // normal\n    n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n        // cartesianDot(n1, n2),\n    determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q; // Two intersection points.\n\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  } // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n\n\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}","import noop from \"../noop.js\";\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function result() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;","import { default as geoStream } from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function (b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function (b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function (b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}","import { asin, atan2, cos, sin, sqrt } from \"./math.js\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}","import compose from \"./compose.js\";\nimport { abs, asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n\n  return rotation;\n}\n\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}","import { abs, epsilon } from \"./math.js\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}","export default function noop() {}","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport { epsilon, halfPi } from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return; // No intersections.\n\n      if (clean & 1) {\n        segment = ringSegments[0];\n\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }\n\n          sink.lineEnd();\n        }\n\n        return;\n      } // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n\n\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n} // Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\n\n\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}","export default function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}","export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) {\n      s[key] = methods[key];\n    }\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }\n\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }\n\n  stream.polygonEnd();\n}\n\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","export default function (array, f) {\n  if (f == null) f = pair;\n  var i = 0,\n      n = array.length - 1,\n      p = array[0],\n      pairs = new Array(n < 0 ? 0 : n);\n\n  while (i < n) {\n    pairs[i] = f(p, p = array[++i]);\n  }\n\n  return pairs;\n}\nexport function pair(a, b) {\n  return [a, b];\n}","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","export default function (a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}","export default function (x) {\n  return x === null ? NaN : +x;\n}","import number from \"./number\";\nexport default function (values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}","import variance from \"./variance\";\nexport default function (array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  } else {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function (x) {\n  return x;\n}","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","import { slice } from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport { tickStep } from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\nexport default function () {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1); // Convert number of thresholds into uniform thresholds.\n\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    } // Remove any thresholds outside the domain.\n\n\n    var m = tz.length;\n\n    while (tz[0] <= x0) {\n      tz.shift(), --m;\n    }\n\n    while (tz[m - 1] > x1) {\n      tz.pop(), --m;\n    }\n\n    var bins = new Array(m + 1),\n        bin; // Initialize bins.\n\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    } // Assign data to bins by value, ignoring any outside the domain.\n\n\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function (_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function (_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function (_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}","import number from \"./number\";\nexport default function (values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}","import { map } from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\nexport default function (values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}","import deviation from \"../deviation\";\nexport default function (values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  } else {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}","import number from \"./number\";\nexport default function (values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;else --m;\n    }\n  } else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\nexport default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  } else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}","export default function (arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) {\n    j += arrays[i].length;\n  }\n\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  } else {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}","export default function (array, indexes) {\n  var i = indexes.length,\n      permutes = new Array(i);\n\n  while (i--) {\n    permutes[i] = array[indexes[i]];\n  }\n\n  return permutes;\n}","import ascending from \"./ascending\";\nexport default function (values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}","export default function (array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  } else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}","import min from \"./min\";\nexport default function (matrix) {\n  if (!(n = matrix.length)) return [];\n\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}","import transpose from \"./transpose\";\nexport default function () {\n  return transpose(arguments);\n}","import adder from \"../adder.js\";\nimport { abs } from \"../math.js\";\nimport noop from \"../noop.js\";\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function result() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;","import { sqrt } from \"../math.js\"; // TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function result() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;","import { tau } from \"../math.js\";\nimport noop from \"../noop.js\";\nexport default function PathContext(context) {\n  this._context = context;\n}\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function pointRadius(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._context.moveTo(x, y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._context.lineTo(x, y);\n\n          break;\n        }\n\n      default:\n        {\n          this._context.moveTo(x + this._radius, y);\n\n          this._context.arc(x, y, this._radius, 0, tau);\n\n          break;\n        }\n    }\n  },\n  result: noop\n};","import adder from \"../adder.js\";\nimport { sqrt } from \"../math.js\";\nimport noop from \"../noop.js\";\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\nvar lengthStream = {\n  point: noop,\n  lineStart: function lineStart() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function lineEnd() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function polygonStart() {\n    lengthRing = true;\n  },\n  polygonEnd: function polygonEnd() {\n    lengthRing = null;\n  },\n  result: function result() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;","export default function PathString() {\n  this._string = [];\n}\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function pointRadius(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._string.push(\"M\", x, \",\", y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._string.push(\"L\", x, \",\", y);\n\n          break;\n        }\n\n      default:\n        {\n          if (this._circle == null) this._circle = circle(this._radius);\n\n          this._string.push(\"M\", x, \",\", y, this._circle);\n\n          break;\n        }\n    }\n  },\n  result: function result() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n}","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\nexport default function (projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n\n    return contextStream.result();\n  }\n\n  path.area = function (object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function (object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function (object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function (object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function (_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function (_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString()) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function (_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math.js\";\nimport { rotateRadians } from \"./rotation.js\"; // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function () {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {\n    point: point\n  };\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}"],"sourceRoot":""}